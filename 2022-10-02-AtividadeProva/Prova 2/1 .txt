Bezier Inferior:
1.500000 0.000000 0.000000 // T = 0.0
1.627413 0.212375 0.000000 // T = 0.33
1.865904 0.510998 0.000000 // T = 0.66
2.000000 1.000000 0.000000 // T = 1.00

Bezier Superior

2.000000 1.000000 0.000000 // T = 0.0
1.927309 1.623076 0.000000 // T = 0.33
1.745174 2.289930 0.000000 // T = 0.66
1.500000 3.000000 0.000000 // T = 1.00


Bezier Tampa

1.500000 3.000000 0.000000 // T = 0.0
1.441352 3.099495 0.000000 // T = 0.33
1.393159 3.100980 0.000000 // T = 0.66
1.400000 3.000000 0.000000 // T = 1.00


#include <iostream>
#include <string>

int main()
{
    int i;
        
        float XI, YI, ZI;
        float XS, YS, ZS;
        float XT, YT, ZT;
        
        float T = 1.00;
    
        float BX0 = 1.5, BY0 = 0.0, BZ0 = 0.0;
        float BX1 = 1.5, BY1 = 0.2, BZ1 = 0.0;
        float BX2 = 2.0, BY2 = 0.4, BZ2 = 0.0;
        float BX3 = 2.0, BY3 = 1.0, BZ3 = 0.0;// INFERIOR
        
        float BX4 = 2.0, BY4 = 1.0, BZ4 = 0.0;
        float BX5 = 2.0, BY5 = 1.6, BZ5 = 0.0;
        float BX6 = 1.75, BY6 = 2.3, BZ6 = 0.0;
        float BX7 = 1.5, BY7 = 3.0, BZ7 = 0.0;//SUPERIOR
        
        float BX8 = 1.5, BY8 = 3.0, BZ8 = 0.0;
        float BX9 = 1.45, BY9 = 3.15, BZ9 = 0.0;
        float BX10 = 1.35, BY10 = 3.15, BZ10 = 0.0;
        float BX11 = 1.4, BY11 = 3.0, BZ11 = 0.0;//TAMPA
        
        
        
        
        
            
        XI = (((1-T)*(1-T)*(1-T))*BX0)+((3*T*((1-T)*(1-T)))*BX1)+(3*(T*T)*(1-T)*BX2)+((T*T*T)*BX3);
        YI = (((1-T)*(1-T)*(1-T))*BY0)+((3*T*((1-T)*(1-T)))*BY1)+(3*(T*T)*(1-T)*BY2)+((T*T*T)*BY3);
        ZI = (((1-T)*(1-T)*(1-T))*BZ0)+((3*T*((1-T)*(1-T)))*BZ1)+(3*(T*T)*(1-T)*BZ2)+((T*T*T)*BZ3);//INFERIOR
        
        XS = (((1-T)*(1-T)*(1-T))*BX4)+((3*T*((1-T)*(1-T)))*BX5)+(3*(T*T)*(1-T)*BX6)+((T*T*T)*BX7);
        YS = (((1-T)*(1-T)*(1-T))*BY4)+((3*T*((1-T)*(1-T)))*BY5)+(3*(T*T)*(1-T)*BY6)+((T*T*T)*BY7);
        ZS = (((1-T)*(1-T)*(1-T))*BZ4)+((3*T*((1-T)*(1-T)))*BZ5)+(3*(T*T)*(1-T)*BZ6)+((T*T*T)*BZ7);//SUPERIOR
    
        XT = (((1-T)*(1-T)*(1-T))*BX8)+((3*T*((1-T)*(1-T)))*BX9)+(3*(T*T)*(1-T)*BX10)+((T*T*T)*BX11);
        YT = (((1-T)*(1-T)*(1-T))*BY8)+((3*T*((1-T)*(1-T)))*BY9)+(3*(T*T)*(1-T)*BY10)+((T*T*T)*BY11);
        ZT = (((1-T)*(1-T)*(1-T))*BZ8)+((3*T*((1-T)*(1-T)))*BZ9)+(3*(T*T)*(1-T)*BZ10)+((T*T*T)*BZ11);//TAMPA
        
        

        //printf("%f %f %f\n", XI, YI, ZI);
        //printf("%f %f %f\n", XS, YS, ZS);
        printf("%f %f %f\n", XT, YT, ZT);
        
        
    
}



